// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TriviaGameAPI.DAL.Repositories;

#nullable disable

namespace TriviaGameAPI.DAL.Migrations
{
    [DbContext(typeof(TriviaGameDBContext))]
    [Migration("20221127092714_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id")
                        .HasName("PK_NC_Answer_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id")
                        .HasName("PK_CL_Category_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.GameplayRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_CL_GameRoom_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("GameplayRooms");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CharacterColor")
                        .HasMaxLength(9)
                        .HasColumnType("varchar");

                    b.Property<string>("ConnectionId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("GameplayRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsGameOrganizer")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastGameDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PL_NC_Player_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("GameplayRoomId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id")
                        .HasName("PK_CL_Question_Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("CategoryId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Answer", b =>
                {
                    b.HasOne("TriviaGameAPI.DAL.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Player", b =>
                {
                    b.HasOne("TriviaGameAPI.DAL.Models.GameplayRoom", null)
                        .WithMany("Players")
                        .HasForeignKey("GameplayRoomId");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Question", b =>
                {
                    b.HasOne("TriviaGameAPI.DAL.Models.Category", "Category")
                        .WithMany("Questions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.Category", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("TriviaGameAPI.DAL.Models.GameplayRoom", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
